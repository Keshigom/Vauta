var __three_vrm__=function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=6)}([function(e,t){e.exports=THREE},function(e,t){e.exports="uniform float f_Cutoff;\nuniform vec4 v_Color;\nuniform vec4 v_ShadeColor;\nuniform sampler2D t_MainTex;\nuniform sampler2D t_ShadeTexture;\nuniform float f_BumpScale;\nuniform sampler2D t_BumpMap;\nuniform float f_ReceiveShadowRate;\nuniform sampler2D t_ReceiveShadowTexture;\nuniform float f_ShadeShift;\nuniform float f_ShadeToony;\nuniform float f_LightColorAttenuation;\nuniform sampler2D t_SphereAdd;\nuniform vec4 v_EmissionColor;\nuniform sampler2D t_EmissionMap;\nuniform sampler2D t_OutlineWidthTexture;\nuniform float f_OutlineWidth;\nuniform float f_OutlineScaledMaxDistance;\nuniform vec4 v_OutlineColor;\nuniform float f_OutlineLightingMix;\n\nuniform int f_DebugMode;\nuniform int f_BlendMode;\nuniform int f_OutlineWidthMode;\nuniform int f_OutlineColorMode;\nuniform int f_CullMode; // Cull [Back | Front | Off]\nuniform int f_OutlineCullMode;\nuniform float f_SrcBlend; // Blend [SrcFactor] [DstFactor]\nuniform float f_DstBlend; // Blend [SrcFactor] [DstFactor]\nuniform int f_ZWrite; // ZWrite [On | Off]\nuniform int f_IsFirstSetup;\n"},function(e,t){e.exports="varying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n  varying vec3 vNormal;\n\n#endif\n\nstruct BlinnPhongMaterial {\n\n  vec3 diffuseColor;\n  vec3 specularColor;\n  float specularShininess;\n  float specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong(const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight) {\n\n  float dotNL = saturate(dot(geometry.normal, directLight.direction));\n  dotNL = saturate(smoothstep(f_ShadeShift, f_ShadeShift + (1.0 + f_ShadeToony), dotNL));\n  vec3 irradiance = mix(v_ShadeColor.rgb, vec3(1.0), dotNL);\n\n  irradiance = irradiance * mix(directLight.color, vec3(average(directLight.color)), f_LightColorAttenuation);\n\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n    irradiance *= PI;\n\n  #endif\n\n  reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert(material.diffuseColor);\n  reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong(directLight, geometry, material.specularColor, material.specularShininess) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong(const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight) {\n\n  reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert(material.diffuseColor);\n\n}\n\n#define RE_Direct RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse RE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD(material) (0)\n"},function(e,t){e.exports="#include <common_mtoon>\n\n// Extend MeshPhongMaterial\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n// #include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n// #include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\n#include <lights_mtoon_pars_fragment>\n\nvoid main() {\n\n  #include <clipping_planes_fragment>\n\n  vec4 diffuseColor = vec4(diffuse, opacity);\n  ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\n  vec3 totalEmissiveRadiance = emissive;\n\n  #include <logdepthbuf_fragment>\n  #include <map_fragment>\n  #include <color_fragment>\n  #include <alphamap_fragment>\n  #include <alphatest_fragment>\n  #include <specularmap_fragment>\n  #include <normal_fragment_begin>\n  #include <normal_fragment_maps>\n  #include <emissivemap_fragment>\n\n  // accumulation\n  #include <lights_phong_fragment>\n  #include <lights_fragment_begin>\n  #include <lights_fragment_maps>\n  #include <lights_fragment_end>\n\n  // modulation\n  #include <aomap_fragment>\n\n  // vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n  vec3 outgoingLight = reflectedLight.directDiffuse + totalEmissiveRadiance;\n\n  #include <envmap_fragment>\n\n  // outgoingLight = mix(v_ShadeColor.rgb, diffuseColor.rgb, saturate(outgoingLight / diffuseColor.rgb));\n  outgoingLight = clamp(outgoingLight, 0.0, 1.0);\n\n  // MToon additive matcap\n  vec3 viewNormal = normalize(normal);\n  vec2 rimUv = vec2(dot(vec3(1.0, 0.0, 0.0), normal), -dot(vec3(0.0, 1.0, 0.0), normal)) * 0.5 + 0.5;\n  vec4 rimColor = texture2D(t_SphereAdd, rimUv);\n  outgoingLight += rimColor.rgb;\n\n  gl_FragColor = vec4(outgoingLight, diffuseColor.a);\n\n  #include <tonemapping_fragment>\n  #include <encodings_fragment>\n  #include <fog_fragment>\n  #include <premultiplied_alpha_fragment>\n  #include <dithering_fragment>\n\n}\n"},function(e,t){e.exports="#include <common_mtoon>\n\n// Extend MeshPhongMaterial\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n  varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n  #include <uv_vertex>\n  #include <uv2_vertex>\n  #include <color_vertex>\n\n  #include <beginnormal_vertex>\n  #include <morphnormal_vertex>\n  #include <skinbase_vertex>\n  #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n  vNormal = normalize( transformedNormal );\n\n#endif\n\n  #include <begin_vertex>\n  #include <morphtarget_vertex>\n  #include <skinning_vertex>\n  #include <displacementmap_vertex>\n  #include <project_vertex>\n  #include <logdepthbuf_vertex>\n  #include <clipping_planes_vertex>\n\n  vViewPosition = - mvPosition.xyz;\n\n  #include <worldpos_vertex>\n  #include <envmap_vertex>\n  #include <shadowmap_vertex>\n  #include <fog_vertex>\n\n}\n"},function(e,t,n){var r=n(0),a=function(){function e(e){this.manager=void 0!==e?e:r.DefaultLoadingManager,this.dracoLoader=null}function t(){var e={};return{get:function(t){return e[t]},add:function(t,n){e[t]=n},remove:function(t){delete e[t]},removeAll:function(){e={}}}}e.prototype={constructor:e,crossOrigin:"anonymous",load:function(e,t,n,a){var i,s=this;i=void 0!==this.resourcePath?this.resourcePath:void 0!==this.path?this.path:r.LoaderUtils.extractUrlBase(e),s.manager.itemStart(e);var o=function(t){a?a(t):console.error(t),s.manager.itemError(e),s.manager.itemEnd(e)},l=new r.FileLoader(s.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.load(e,function(n){try{s.parse(n,i,function(n){t(n),s.manager.itemEnd(e)},o)}catch(e){o(e)}},n,o)},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setDRACOLoader:function(e){return this.dracoLoader=e,this},parse:function(e,t,l,u){var m,h={};if("string"==typeof e)m=e;else if(r.LoaderUtils.decodeText(new Uint8Array(e,0,4))===o){try{h[n.KHR_BINARY_GLTF]=new c(e)}catch(e){return void(u&&u(e))}m=h[n.KHR_BINARY_GLTF].content}else m=r.LoaderUtils.decodeText(new Uint8Array(e));var v=JSON.parse(m);if(void 0===v.asset||v.asset.version[0]<2)u&&u(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));else{if(v.extensionsUsed)for(var g=0;g<v.extensionsUsed.length;++g){var _=v.extensionsUsed[g],S=v.extensionsRequired||[];switch(_){case n.KHR_LIGHTS_PUNCTUAL:h[_]=new i(v);break;case n.KHR_MATERIALS_UNLIT:h[_]=new s(v);break;case n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:h[_]=new d(v);break;case n.KHR_DRACO_MESH_COMPRESSION:h[_]=new p(v,this.dracoLoader);break;case n.MSFT_TEXTURE_DDS:h[n.MSFT_TEXTURE_DDS]=new a(v);break;case n.KHR_TEXTURE_TRANSFORM:h[n.KHR_TEXTURE_TRANSFORM]=new f(v);break;default:S.indexOf(_)>=0&&console.warn('THREE.GLTFLoader: Unknown extension "'+_+'".')}}var M=new k(v,h,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,manager:this.manager});M.parse(function(e,t,n,r,a){var i={scene:e,scenes:t,cameras:n,animations:r,asset:a.asset,parser:M,userData:{}};F(h,i,a),l(i)},u)}}};var n={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",MSFT_TEXTURE_DDS:"MSFT_texture_dds"};function a(){if(!r.DDSLoader)throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader");this.name=n.MSFT_TEXTURE_DDS,this.ddsLoader=new r.DDSLoader}function i(e){this.name=n.KHR_LIGHTS_PUNCTUAL;var t=e.extensions&&e.extensions[n.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=t.lights||[]}function s(e){this.name=n.KHR_MATERIALS_UNLIT}i.prototype.loadLight=function(e){var t,n=this.lightDefs[e],a=new r.Color(16777215);void 0!==n.color&&a.fromArray(n.color);var i=void 0!==n.range?n.range:0;switch(n.type){case"directional":(t=new r.DirectionalLight(a)).target.position.set(0,0,-1),t.add(t.target);break;case"point":(t=new r.PointLight(a)).distance=i;break;case"spot":(t=new r.SpotLight(a)).distance=i,n.spot=n.spot||{},n.spot.innerConeAngle=void 0!==n.spot.innerConeAngle?n.spot.innerConeAngle:0,n.spot.outerConeAngle=void 0!==n.spot.outerConeAngle?n.spot.outerConeAngle:Math.PI/4,t.angle=n.spot.outerConeAngle,t.penumbra=1-n.spot.innerConeAngle/n.spot.outerConeAngle,t.target.position.set(0,0,-1),t.add(t.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+n.type+'".')}return t.position.set(0,0,0),t.decay=2,void 0!==n.intensity&&(t.intensity=n.intensity),t.name=n.name||"light_"+e,Promise.resolve(t)},s.prototype.getMaterialType=function(e){return r.MeshBasicMaterial},s.prototype.extendParams=function(e,t,n){var a=[];e.color=new r.Color(1,1,1),e.opacity=1;var i=t.pbrMetallicRoughness;if(i){if(Array.isArray(i.baseColorFactor)){var s=i.baseColorFactor;e.color.fromArray(s),e.opacity=s[3]}void 0!==i.baseColorTexture&&a.push(n.assignTexture(e,"map",i.baseColorTexture))}return Promise.all(a)};var o="glTF",l=12,u={JSON:1313821514,BIN:5130562};function c(e){this.name=n.KHR_BINARY_GLTF,this.content=null,this.body=null;var t=new DataView(e,0,l);if(this.header={magic:r.LoaderUtils.decodeText(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==o)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");for(var a=new DataView(e,l),i=0;i<a.byteLength;){var s=a.getUint32(i,!0);i+=4;var c=a.getUint32(i,!0);if(i+=4,c===u.JSON){var p=new Uint8Array(e,l+i,s);this.content=r.LoaderUtils.decodeText(p)}else if(c===u.BIN){var f=l+i;this.body=e.slice(f,f+s)}i+=s}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}function p(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=n.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,r.DRACOLoader.getDecoderModule()}function f(e){this.name=n.KHR_TEXTURE_TRANSFORM}function d(){return{name:n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return r.ShaderMaterial},extendParams:function(e,t,n){var a=t.extensions[this.name],i=r.ShaderLib.standard,s=r.UniformsUtils.clone(i.uniforms),o=["#ifdef USE_SPECULARMAP","\tuniform sampler2D specularMap;","#endif"].join("\n"),l=["#ifdef USE_GLOSSINESSMAP","\tuniform sampler2D glossinessMap;","#endif"].join("\n"),u=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","\tvec4 texelSpecular = texture2D( specularMap, vUv );","\ttexelSpecular = sRGBToLinear( texelSpecular );","\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","\tspecularFactor *= texelSpecular.rgb;","#endif"].join("\n"),c=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );","\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","\tglossinessFactor *= texelGlossiness.a;","#endif"].join("\n"),p=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb;","material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );","material.specularColor = specularFactor.rgb;"].join("\n"),f=i.fragmentShader.replace("uniform float roughness;","uniform vec3 specular;").replace("uniform float metalness;","uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>",o).replace("#include <metalnessmap_pars_fragment>",l).replace("#include <roughnessmap_fragment>",u).replace("#include <metalnessmap_fragment>",c).replace("#include <lights_physical_fragment>",p);delete s.roughness,delete s.metalness,delete s.roughnessMap,delete s.metalnessMap,s.specular={value:(new r.Color).setHex(1118481)},s.glossiness={value:.5},s.specularMap={value:null},s.glossinessMap={value:null},e.vertexShader=i.vertexShader,e.fragmentShader=f,e.uniforms=s,e.defines={STANDARD:""},e.color=new r.Color(1,1,1),e.opacity=1;var d=[];if(Array.isArray(a.diffuseFactor)){var m=a.diffuseFactor;e.color.fromArray(m),e.opacity=m[3]}if(void 0!==a.diffuseTexture&&d.push(n.assignTexture(e,"map",a.diffuseTexture)),e.emissive=new r.Color(0,0,0),e.glossiness=void 0!==a.glossinessFactor?a.glossinessFactor:1,e.specular=new r.Color(1,1,1),Array.isArray(a.specularFactor)&&e.specular.fromArray(a.specularFactor),void 0!==a.specularGlossinessTexture){var h=a.specularGlossinessTexture;d.push(n.assignTexture(e,"glossinessMap",h)),d.push(n.assignTexture(e,"specularMap",h))}return Promise.all(d)},createMaterial:function(e){var t=new r.ShaderMaterial({defines:e.defines,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms,fog:!0,lights:!0,opacity:e.opacity,transparent:e.transparent});return t.isGLTFSpecularGlossinessMaterial=!0,t.color=e.color,t.map=void 0===e.map?null:e.map,t.lightMap=null,t.lightMapIntensity=1,t.aoMap=void 0===e.aoMap?null:e.aoMap,t.aoMapIntensity=1,t.emissive=e.emissive,t.emissiveIntensity=1,t.emissiveMap=void 0===e.emissiveMap?null:e.emissiveMap,t.bumpMap=void 0===e.bumpMap?null:e.bumpMap,t.bumpScale=1,t.normalMap=void 0===e.normalMap?null:e.normalMap,e.normalScale&&(t.normalScale=e.normalScale),t.displacementMap=null,t.displacementScale=1,t.displacementBias=0,t.specularMap=void 0===e.specularMap?null:e.specularMap,t.specular=e.specular,t.glossinessMap=void 0===e.glossinessMap?null:e.glossinessMap,t.glossiness=e.glossiness,t.alphaMap=null,t.envMap=void 0===e.envMap?null:e.envMap,t.envMapIntensity=1,t.refractionRatio=.98,t.extensions.derivatives=!0,t},cloneMaterial:function(e){var t=e.clone();t.isGLTFSpecularGlossinessMaterial=!0;for(var n=this.specularGlossinessParams,r=0,a=n.length;r<a;r++)t[n[r]]=e[n[r]];return t},refreshUniforms:function(e,t,n,r,a,i){if(!0===a.isGLTFSpecularGlossinessMaterial){var s,o=a.uniforms,l=a.defines;o.opacity.value=a.opacity,o.diffuse.value.copy(a.color),o.emissive.value.copy(a.emissive).multiplyScalar(a.emissiveIntensity),o.map.value=a.map,o.specularMap.value=a.specularMap,o.alphaMap.value=a.alphaMap,o.lightMap.value=a.lightMap,o.lightMapIntensity.value=a.lightMapIntensity,o.aoMap.value=a.aoMap,o.aoMapIntensity.value=a.aoMapIntensity,a.map?s=a.map:a.specularMap?s=a.specularMap:a.displacementMap?s=a.displacementMap:a.normalMap?s=a.normalMap:a.bumpMap?s=a.bumpMap:a.glossinessMap?s=a.glossinessMap:a.alphaMap?s=a.alphaMap:a.emissiveMap&&(s=a.emissiveMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),o.uvTransform.value.copy(s.matrix)),a.envMap&&(o.envMap.value=a.envMap,o.envMapIntensity.value=a.envMapIntensity,o.flipEnvMap.value=a.envMap.isCubeTexture?-1:1,o.reflectivity.value=a.reflectivity,o.refractionRatio.value=a.refractionRatio,o.maxMipLevel.value=e.properties.get(a.envMap).__maxMipLevel),o.specular.value.copy(a.specular),o.glossiness.value=a.glossiness,o.glossinessMap.value=a.glossinessMap,o.emissiveMap.value=a.emissiveMap,o.bumpMap.value=a.bumpMap,o.normalMap.value=a.normalMap,o.displacementMap.value=a.displacementMap,o.displacementScale.value=a.displacementScale,o.displacementBias.value=a.displacementBias,null!==o.glossinessMap.value&&void 0===l.USE_GLOSSINESSMAP&&(l.USE_GLOSSINESSMAP="",l.USE_ROUGHNESSMAP=""),null===o.glossinessMap.value&&void 0!==l.USE_GLOSSINESSMAP&&(delete l.USE_GLOSSINESSMAP,delete l.USE_ROUGHNESSMAP)}}}}function m(e,t,n,a){r.Interpolant.call(this,e,t,n,a)}p.prototype.decodePrimitive=function(e,t){var n=this.json,r=this.dracoLoader,a=e.extensions[this.name].bufferView,i=e.extensions[this.name].attributes,s={},o={},l={};for(var u in i)u in R&&(s[R[u]]=i[u]);for(u in e.attributes)if(void 0!==R[u]&&void 0!==i[u]){var c=n.accessors[e.attributes[u]],p=T[c.componentType];l[R[u]]=p,o[R[u]]=!0===c.normalized}return t.getDependency("bufferView",a).then(function(e){return new Promise(function(t){r.decodeDracoFile(e,function(e){for(var n in e.attributes){var r=e.attributes[n],a=o[n];void 0!==a&&(r.normalized=a)}t(e)},s,l)})})},f.prototype.extendTexture=function(e,t){return e=e.clone(),void 0!==t.offset&&e.offset.fromArray(t.offset),void 0!==t.rotation&&(e.rotation=t.rotation),void 0!==t.scale&&e.repeat.fromArray(t.scale),void 0!==t.texCoord&&console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.'),e.needsUpdate=!0,e},m.prototype=Object.create(r.Interpolant.prototype),m.prototype.constructor=m,m.prototype.copySampleValue_=function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,a=e*r*3+r,i=0;i!==r;i++)t[i]=n[a+i];return t},m.prototype.beforeStart_=m.prototype.copySampleValue_,m.prototype.afterEnd_=m.prototype.copySampleValue_,m.prototype.interpolate_=function(e,t,n,r){for(var a=this.resultBuffer,i=this.sampleValues,s=this.valueSize,o=2*s,l=3*s,u=r-t,c=(n-t)/u,p=c*c,f=p*c,d=e*l,m=d-l,h=-2*f+3*p,v=f-p,g=1-h,_=v-p+c,S=0;S!==s;S++){var M=i[m+S+s],y=i[m+S+o]*u,T=i[d+S+s],L=i[d+S]*u;a[S]=g*M+_*y+h*T+v*L}return a};var h=0,v=1,g=2,_=3,S=4,M=5,y=6,T=(Number,r.Matrix3,r.Matrix4,r.Vector2,r.Vector3,r.Vector4,r.Texture,{5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array}),L={9728:r.NearestFilter,9729:r.LinearFilter,9984:r.NearestMipMapNearestFilter,9985:r.LinearMipMapNearestFilter,9986:r.NearestMipMapLinearFilter,9987:r.LinearMipMapLinearFilter},x={33071:r.ClampToEdgeWrapping,33648:r.MirroredRepeatWrapping,10497:r.RepeatWrapping},b=(r.BackSide,r.FrontSide,r.NeverDepth,r.LessDepth,r.EqualDepth,r.LessEqualDepth,r.GreaterEqualDepth,r.NotEqualDepth,r.GreaterEqualDepth,r.AlwaysDepth,r.AddEquation,r.SubtractEquation,r.ReverseSubtractEquation,r.ZeroFactor,r.OneFactor,r.SrcColorFactor,r.OneMinusSrcColorFactor,r.SrcAlphaFactor,r.OneMinusSrcAlphaFactor,r.DstAlphaFactor,r.OneMinusDstAlphaFactor,r.DstColorFactor,r.OneMinusDstColorFactor,r.SrcAlphaSaturateFactor,{SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16}),R={POSITION:"position",NORMAL:"normal",TEXCOORD_0:"uv",TEXCOORD_1:"uv2",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},E={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},A={CUBICSPLINE:r.InterpolateSmooth,LINEAR:r.InterpolateLinear,STEP:r.InterpolateDiscrete},w="OPAQUE",P="MASK",D="BLEND",C={"image/png":r.RGBAFormat,"image/jpeg":r.RGBFormat};function O(e,t){return"string"!=typeof e||""===e?"":/^(https?:)?\/\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:/^blob:.*$/i.test(e)?e:t+e}function F(e,t,n){for(var r in n.extensions)void 0===e[r]&&(t.userData.gltfExtensions=t.userData.gltfExtensions||{},t.userData.gltfExtensions[r]=n.extensions[r])}function I(e,t){void 0!==t.extras&&("object"==typeof t.extras?e.userData=t.extras:console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+t.extras))}function U(e,t){if(e.updateMorphTargets(),void 0!==t.weights)for(var n=0,r=t.weights.length;n<r;n++)e.morphTargetInfluences[n]=t.weights[n];if(t.extras&&Array.isArray(t.extras.targetNames)){var a=t.extras.targetNames;if(e.morphTargetInfluences.length===a.length){e.morphTargetDictionary={};for(n=0,r=a.length;n<r;n++)e.morphTargetDictionary[a[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function G(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(var n in e)if(e[n]!==t[n])return!1;return!0}function N(e,t){if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function B(e,t){for(var r=0,a=e.length;r<a;r++){var i=e[r];if(s=i.primitive,o=t,l=void 0,u=void 0,l=s.extensions?s.extensions[n.KHR_DRACO_MESH_COMPRESSION]:void 0,u=o.extensions?o.extensions[n.KHR_DRACO_MESH_COMPRESSION]:void 0,l&&u?l.bufferView===u.bufferView&&G(l.attributes,u.attributes):s.indices===o.indices&&G(s.attributes,o.attributes))return i.promise}var s,o,l,u;return null}function H(e){if(e.isInterleavedBufferAttribute){for(var t=e.count,n=e.itemSize,a=e.array.slice(0,t*n),i=0,s=0;i<t;++i)a[s++]=e.getX(i),n>=2&&(a[s++]=e.getY(i)),n>=3&&(a[s++]=e.getZ(i)),n>=4&&(a[s++]=e.getW(i));return new r.BufferAttribute(a,n,e.normalized)}return e.clone()}function k(e,n,a){this.json=e||{},this.extensions=n||{},this.options=a||{},this.cache=new t,this.primitiveCache=[],this.multiplePrimitivesCache=[],this.multiPassGeometryCache=[],this.textureLoader=new r.TextureLoader(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new r.FileLoader(this.options.manager),this.fileLoader.setResponseType("arraybuffer")}function j(e,t,n){var r=t.attributes,a=[];function i(t,r){return n.getDependency("accessor",t).then(function(t){e.addAttribute(r,t)})}for(var s in r){var o=R[s];o&&(o in e.attributes||a.push(i(r[s],o)))}if(void 0!==t.indices&&!e.index){var l=n.getDependency("accessor",t.indices).then(function(t){e.setIndex(t)});a.push(l)}return I(e,t),Promise.all(a).then(function(){return void 0!==t.targets?function(e,t,n){for(var r=!1,a=!1,i=0,s=t.length;i<s&&(void 0!==(u=t[i]).POSITION&&(r=!0),void 0!==u.NORMAL&&(a=!0),!r||!a);i++);if(!r&&!a)return Promise.resolve(e);var o=[],l=[];for(i=0,s=t.length;i<s;i++){var u=t[i];if(r){var c=void 0!==u.POSITION?n.getDependency("accessor",u.POSITION).then(function(e){return H(e)}):e.attributes.position;o.push(c)}a&&(c=void 0!==u.NORMAL?n.getDependency("accessor",u.NORMAL).then(function(e){return H(e)}):e.attributes.normal,l.push(c))}return Promise.all([Promise.all(o),Promise.all(l)]).then(function(n){for(var i=n[0],s=n[1],o=0,l=t.length;o<l;o++){var u=t[o],c="morphTarget"+o;if(r&&void 0!==u.POSITION){var p=i[o];p.name=c;for(var f=e.attributes.position,d=0,m=p.count;d<m;d++)p.setXYZ(d,p.getX(d)+f.getX(d),p.getY(d)+f.getY(d),p.getZ(d)+f.getZ(d))}if(a&&void 0!==u.NORMAL){var h=s[o];h.name=c;var v=e.attributes.normal;for(d=0,m=h.count;d<m;d++)h.setXYZ(d,h.getX(d)+v.getX(d),h.getY(d)+v.getY(d),h.getZ(d)+v.getZ(d))}}return r&&(e.morphAttributes.position=i),a&&(e.morphAttributes.normal=s),e})}(e,t.targets,n):e})}return k.prototype.parse=function(e,t){var n=this.json;this.cache.removeAll(),this.markDefs(),this.getMultiDependencies(["scene","animation","camera"]).then(function(t){var r=t.scenes||[],a=r[n.scene||0],i=t.animations||[],s=t.cameras||[];e(a,r,s,i,n)}).catch(t)},k.prototype.markDefs=function(){for(var e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[],r={},a={},i=0,s=t.length;i<s;i++)for(var o=t[i].joints,l=0,u=o.length;l<u;l++)e[o[l]].isBone=!0;for(var c=0,p=e.length;c<p;c++){var f=e[c];void 0!==f.mesh&&(void 0===r[f.mesh]&&(r[f.mesh]=a[f.mesh]=0),r[f.mesh]++,void 0!==f.skin&&(n[f.mesh].isSkinnedMesh=!0))}this.json.meshReferences=r,this.json.meshUses=a},k.prototype.getDependency=function(e,t){var r=e+":"+t,a=this.cache.get(r);if(!a){switch(e){case"scene":a=this.loadScene(t);break;case"node":a=this.loadNode(t);break;case"mesh":a=this.loadMesh(t);break;case"accessor":a=this.loadAccessor(t);break;case"bufferView":a=this.loadBufferView(t);break;case"buffer":a=this.loadBuffer(t);break;case"material":a=this.loadMaterial(t);break;case"texture":a=this.loadTexture(t);break;case"skin":a=this.loadSkin(t);break;case"animation":a=this.loadAnimation(t);break;case"camera":a=this.loadCamera(t);break;case"light":a=this.extensions[n.KHR_LIGHTS_PUNCTUAL].loadLight(t);break;default:throw new Error("Unknown type: "+e)}this.cache.add(r,a)}return a},k.prototype.getDependencies=function(e){var t=this.cache.get(e);if(!t){var n=this,r=this.json[e+("mesh"===e?"es":"s")]||[];t=Promise.all(r.map(function(t,r){return n.getDependency(e,r)})),this.cache.add(e,t)}return t},k.prototype.getMultiDependencies=function(e){for(var t={},n=[],r=0,a=e.length;r<a;r++){var i=e[r],s=this.getDependencies(i);s=s.then(function(e,n){t[e]=n}.bind(this,i+("mesh"===i?"es":"s"))),n.push(s)}return Promise.all(n).then(function(){return t})},k.prototype.loadBuffer=function(e){var t=this.json.buffers[e],r=this.fileLoader;if(t.type&&"arraybuffer"!==t.type)throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(void 0===t.uri&&0===e)return Promise.resolve(this.extensions[n.KHR_BINARY_GLTF].body);var a=this.options;return new Promise(function(e,n){r.load(O(t.uri,a.path),e,void 0,function(){n(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})},k.prototype.loadBufferView=function(e){var t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(e){var n=t.byteLength||0,r=t.byteOffset||0;return e.slice(r,r+n)})},k.prototype.loadAccessor=function(e){var t=this,n=this.json,a=this.json.accessors[e];if(void 0===a.bufferView&&void 0===a.sparse)return Promise.resolve(null);var i=[];return void 0!==a.bufferView?i.push(this.getDependency("bufferView",a.bufferView)):i.push(null),void 0!==a.sparse&&(i.push(this.getDependency("bufferView",a.sparse.indices.bufferView)),i.push(this.getDependency("bufferView",a.sparse.values.bufferView))),Promise.all(i).then(function(e){var i,s,o=e[0],l=b[a.type],u=T[a.componentType],c=u.BYTES_PER_ELEMENT,p=c*l,f=a.byteOffset||0,d=void 0!==a.bufferView?n.bufferViews[a.bufferView].byteStride:void 0,m=!0===a.normalized;if(d&&d!==p){var h="InterleavedBuffer:"+a.bufferView+":"+a.componentType,v=t.cache.get(h);v||(i=new u(o),v=new r.InterleavedBuffer(i,d/c),t.cache.add(h,v)),s=new r.InterleavedBufferAttribute(v,l,f/c,m)}else i=null===o?new u(a.count*l):new u(o,f,a.count*l),s=new r.BufferAttribute(i,l,m);if(void 0!==a.sparse){var g=b.SCALAR,_=T[a.sparse.indices.componentType],S=a.sparse.indices.byteOffset||0,M=a.sparse.values.byteOffset||0,y=new _(e[1],S,a.sparse.count*g),L=new u(e[2],M,a.sparse.count*l);null!==o&&s.setArray(s.array.slice());for(var x=0,R=y.length;x<R;x++){var E=y[x];if(s.setX(E,L[x*l]),l>=2&&s.setY(E,L[x*l+1]),l>=3&&s.setZ(E,L[x*l+2]),l>=4&&s.setW(E,L[x*l+3]),l>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return s})},k.prototype.loadTexture=function(e){var t,a=this,i=this.json,s=this.options,o=this.textureLoader,l=window.URL||window.webkitURL,u=i.textures[e],c=u.extensions||{},p=(t=c[n.MSFT_TEXTURE_DDS]?i.images[c[n.MSFT_TEXTURE_DDS].source]:i.images[u.source]).uri,f=!1;return void 0!==t.bufferView&&(p=a.getDependency("bufferView",t.bufferView).then(function(e){f=!0;var n=new Blob([e],{type:t.mimeType});return p=l.createObjectURL(n)})),Promise.resolve(p).then(function(e){var t=r.Loader.Handlers.get(e);return t||(t=c[n.MSFT_TEXTURE_DDS]?a.extensions[n.MSFT_TEXTURE_DDS].ddsLoader:o),new Promise(function(n,r){t.load(O(e,s.path),n,void 0,r)})}).then(function(e){!0===f&&l.revokeObjectURL(p),e.flipY=!1,void 0!==u.name&&(e.name=u.name),t.mimeType in C&&(e.format=C[t.mimeType]);var n=(i.samplers||{})[u.sampler]||{};return e.magFilter=L[n.magFilter]||r.LinearFilter,e.minFilter=L[n.minFilter]||r.LinearMipMapLinearFilter,e.wrapS=x[n.wrapS]||r.RepeatWrapping,e.wrapT=x[n.wrapT]||r.RepeatWrapping,e})},k.prototype.assignTexture=function(e,t,r){var a=this;return this.getDependency("texture",r.index).then(function(i){if(a.extensions[n.KHR_TEXTURE_TRANSFORM]){var s=void 0!==r.extensions?r.extensions[n.KHR_TEXTURE_TRANSFORM]:void 0;s&&(i=a.extensions[n.KHR_TEXTURE_TRANSFORM].extendTexture(i,s))}e[t]=i})},k.prototype.loadMaterial=function(e){var t,a=this.json,i=this.extensions,s=a.materials[e],o={},l=s.extensions||{},u=[];if(l[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var c=i[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];t=c.getMaterialType(s),u.push(c.extendParams(o,s,this))}else if(l[n.KHR_MATERIALS_UNLIT]){var p=i[n.KHR_MATERIALS_UNLIT];t=p.getMaterialType(s),u.push(p.extendParams(o,s,this))}else{t=r.MeshStandardMaterial;var f=s.pbrMetallicRoughness||{};if(o.color=new r.Color(1,1,1),o.opacity=1,Array.isArray(f.baseColorFactor)){var d=f.baseColorFactor;o.color.fromArray(d),o.opacity=d[3]}void 0!==f.baseColorTexture&&u.push(this.assignTexture(o,"map",f.baseColorTexture)),o.metalness=void 0!==f.metallicFactor?f.metallicFactor:1,o.roughness=void 0!==f.roughnessFactor?f.roughnessFactor:1,void 0!==f.metallicRoughnessTexture&&(u.push(this.assignTexture(o,"metalnessMap",f.metallicRoughnessTexture)),u.push(this.assignTexture(o,"roughnessMap",f.metallicRoughnessTexture)))}!0===s.doubleSided&&(o.side=r.DoubleSide);var m=s.alphaMode||w;return m===D?o.transparent=!0:(o.transparent=!1,m===P&&(o.alphaTest=void 0!==s.alphaCutoff?s.alphaCutoff:.5)),void 0!==s.normalTexture&&t!==r.MeshBasicMaterial&&(u.push(this.assignTexture(o,"normalMap",s.normalTexture)),o.normalScale=new r.Vector2(1,1),void 0!==s.normalTexture.scale&&o.normalScale.set(s.normalTexture.scale,s.normalTexture.scale)),void 0!==s.occlusionTexture&&t!==r.MeshBasicMaterial&&(u.push(this.assignTexture(o,"aoMap",s.occlusionTexture)),void 0!==s.occlusionTexture.strength&&(o.aoMapIntensity=s.occlusionTexture.strength)),void 0!==s.emissiveFactor&&t!==r.MeshBasicMaterial&&(o.emissive=(new r.Color).fromArray(s.emissiveFactor)),void 0!==s.emissiveTexture&&t!==r.MeshBasicMaterial&&u.push(this.assignTexture(o,"emissiveMap",s.emissiveTexture)),Promise.all(u).then(function(){var e;return e=t===r.ShaderMaterial?i[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(o):new t(o),void 0!==s.name&&(e.name=s.name),e.normalScale&&(e.normalScale.y=-e.normalScale.y),e.map&&(e.map.encoding=r.sRGBEncoding),e.emissiveMap&&(e.emissiveMap.encoding=r.sRGBEncoding),e.specularMap&&(e.specularMap.encoding=r.sRGBEncoding),I(e,s),s.extensions&&F(i,e,s),e})},k.prototype.loadGeometries=function(e){var t,a=this,i=this.extensions,s=this.primitiveCache,o=function(e){if(e.length<2)return!1;var t=e[0],r=t.targets||[];if(void 0===t.indices)return!1;for(var a=1,i=e.length;a<i;a++){var s=e[a];if(t.mode!==s.mode)return!1;if(void 0===s.indices)return!1;if(s.extensions&&s.extensions[n.KHR_DRACO_MESH_COMPRESSION])return!1;if(!G(t.attributes,s.attributes))return!1;var o=s.targets||[];if(r.length!==o.length)return!1;for(var l=0,u=r.length;l<u;l++)if(!G(r[l],o[l]))return!1}return!0}(e);function l(e){return i[n.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(e,a).then(function(t){return j(t,e,a)})}o&&(t=e,e=[e[0]]);for(var u=[],c=0,p=e.length;c<p;c++){var f,d=e[c],m=B(s,d);if(m)u.push(m);else f=d.extensions&&d.extensions[n.KHR_DRACO_MESH_COMPRESSION]?l(d):j(new r.BufferGeometry,d,a),s.push({primitive:d,promise:f}),u.push(f)}return Promise.all(u).then(function(n){if(o){var i=n[0];if(null!==(d=function(e,t,n){for(var r=0,a=e.length;r<a;r++){var i=e[r];if(t===i.baseGeometry&&N(n,i.primitives))return i.geometry}return null}(f=a.multiPassGeometryCache,i,t)))return[d.geometry];var s=new r.BufferGeometry;for(var l in s.name=i.name,s.userData=i.userData,i.attributes)s.addAttribute(l,i.attributes[l]);for(var l in i.morphAttributes)s.morphAttributes[l]=i.morphAttributes[l];for(var u=[],c=0,p=t.length;c<p;c++)u.push(a.getDependency("accessor",t[c].indices));return Promise.all(u).then(function(e){for(var n=[],r=0,a=0,o=t.length;a<o;a++){for(var l=e[a],u=0,c=l.count;u<c;u++)n.push(l.array[u]);s.addGroup(r,l.count,a),r+=l.count}return s.setIndex(n),f.push({geometry:s,baseGeometry:i,primitives:t}),[s]})}if(n.length>1&&void 0!==r.BufferGeometryUtils){for(c=1,p=e.length;c<p;c++)if(e[0].mode!==e[c].mode)return n;var f,d;if(d=function(e,t){for(var n=0,r=e.length;n<r;n++){var a=e[n];if(N(t,a.baseGeometries))return a.geometry}return null}(f=a.multiplePrimitivesCache,n)){if(null!==d.geometry)return[d.geometry]}else{s=r.BufferGeometryUtils.mergeBufferGeometries(n,!0);if(f.push({geometry:s,baseGeometries:n}),null!==s)return[s]}}return n})},k.prototype.loadMesh=function(e){for(var t=this,a=this.json,i=this.extensions,s=a.meshes[e],o=s.primitives,l=[],u=0,c=o.length;u<c;u++){var p=void 0===o[u].material?new r.MeshStandardMaterial({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:r.FrontSide}):this.getDependency("material",o[u].material);l.push(p)}return Promise.all(l).then(function(a){return t.loadGeometries(o).then(function(l){for(var u=1===l.length&&l[0].groups.length>0,c=[],p=0,f=l.length;p<f;p++){var d,m=l[p],T=o[p],L=u?a:a[p];if(T.mode===S||T.mode===M||T.mode===y||void 0===T.mode)!0===(d=!0===s.isSkinnedMesh?new r.SkinnedMesh(m,L):new r.Mesh(m,L)).isSkinnedMesh&&d.normalizeSkinWeights(),T.mode===M?d.drawMode=r.TriangleStripDrawMode:T.mode===y&&(d.drawMode=r.TriangleFanDrawMode);else if(T.mode===v)d=new r.LineSegments(m,L);else if(T.mode===_)d=new r.Line(m,L);else if(T.mode===g)d=new r.LineLoop(m,L);else{if(T.mode!==h)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+T.mode);d=new r.Points(m,L)}Object.keys(d.geometry.morphAttributes).length>0&&U(d,s),d.name=s.name||"mesh_"+e,l.length>1&&(d.name+="_"+p),I(d,s),c.push(d);for(var x=u?d.material:[d.material],b=void 0!==m.attributes.color,R=void 0===m.attributes.normal,E=!0===d.isSkinnedMesh,A=Object.keys(m.morphAttributes).length>0,w=A&&void 0!==m.morphAttributes.normal,P=0,D=x.length;P<D;P++){L=x[P];if(d.isPoints){var C="PointsMaterial:"+L.uuid,O=t.cache.get(C);O||(O=new r.PointsMaterial,r.Material.prototype.copy.call(O,L),O.color.copy(L.color),O.map=L.map,O.lights=!1,t.cache.add(C,O)),L=O}else if(d.isLine){C="LineBasicMaterial:"+L.uuid;var F=t.cache.get(C);F||(F=new r.LineBasicMaterial,r.Material.prototype.copy.call(F,L),F.color.copy(L.color),F.lights=!1,t.cache.add(C,F)),L=F}if(b||R||E||A){C="ClonedMaterial:"+L.uuid+":";L.isGLTFSpecularGlossinessMaterial&&(C+="specular-glossiness:"),E&&(C+="skinning:"),b&&(C+="vertex-colors:"),R&&(C+="flat-shading:"),A&&(C+="morph-targets:"),w&&(C+="morph-normals:");var G=t.cache.get(C);G||(G=L.isGLTFSpecularGlossinessMaterial?i[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(L):L.clone(),E&&(G.skinning=!0),b&&(G.vertexColors=r.VertexColors),R&&(G.flatShading=!0),A&&(G.morphTargets=!0),w&&(G.morphNormals=!0),t.cache.add(C,G)),L=G}x[P]=L,L.aoMap&&void 0===m.attributes.uv2&&void 0!==m.attributes.uv&&(console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."),m.addAttribute("uv2",new r.BufferAttribute(m.attributes.uv.array,2))),L.isGLTFSpecularGlossinessMaterial&&(d.onBeforeRender=i[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms)}d.material=u?x:x[0]}if(1===c.length)return c[0];var N=new r.Group;for(p=0,f=c.length;p<f;p++)N.add(c[p]);return N})})},k.prototype.loadCamera=function(e){var t,n=this.json.cameras[e],a=n[n.type];if(a)return"perspective"===n.type?t=new r.PerspectiveCamera(r.Math.radToDeg(a.yfov),a.aspectRatio||1,a.znear||1,a.zfar||2e6):"orthographic"===n.type&&(t=new r.OrthographicCamera(a.xmag/-2,a.xmag/2,a.ymag/2,a.ymag/-2,a.znear,a.zfar)),void 0!==n.name&&(t.name=n.name),I(t,n),Promise.resolve(t);console.warn("THREE.GLTFLoader: Missing camera parameters.")},k.prototype.loadSkin=function(e){var t=this.json.skins[e],n={joints:t.joints};return void 0===t.inverseBindMatrices?Promise.resolve(n):this.getDependency("accessor",t.inverseBindMatrices).then(function(e){return n.inverseBindMatrices=e,n})},k.prototype.loadAnimation=function(e){for(var t=this.json.animations[e],n=[],a=[],i=[],s=[],o=[],l=0,u=t.channels.length;l<u;l++){var c=t.channels[l],p=t.samplers[c.sampler],f=c.target,d=void 0!==f.node?f.node:f.id,h=void 0!==t.parameters?t.parameters[p.input]:p.input,v=void 0!==t.parameters?t.parameters[p.output]:p.output;n.push(this.getDependency("node",d)),a.push(this.getDependency("accessor",h)),i.push(this.getDependency("accessor",v)),s.push(p),o.push(f)}return Promise.all([Promise.all(n),Promise.all(a),Promise.all(i),Promise.all(s),Promise.all(o)]).then(function(n){for(var a=n[0],i=n[1],s=n[2],o=n[3],l=n[4],u=[],c=0,p=a.length;c<p;c++){var f=a[c],d=i[c],h=s[c],v=o[c],g=l[c];if(void 0!==f){var _;switch(f.updateMatrix(),f.matrixAutoUpdate=!0,E[g.path]){case E.weights:_=r.NumberKeyframeTrack;break;case E.rotation:_=r.QuaternionKeyframeTrack;break;case E.position:case E.scale:default:_=r.VectorKeyframeTrack}var S=f.name?f.name:f.uuid,M=void 0!==v.interpolation?A[v.interpolation]:r.InterpolateLinear,y=[];E[g.path]===E.weights?f.traverse(function(e){!0===e.isMesh&&e.morphTargetInfluences&&y.push(e.name?e.name:e.uuid)}):y.push(S);for(var T=0,L=y.length;T<L;T++){var x=new _(y[T]+"."+E[g.path],r.AnimationUtils.arraySlice(d.array,0),r.AnimationUtils.arraySlice(h.array,0),M);"CUBICSPLINE"===v.interpolation&&(x.createInterpolant=function(e){return new m(this.times,this.values,this.getValueSize()/3,e)},x.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),u.push(x)}}}var b=void 0!==t.name?t.name:"animation_"+e;return new r.AnimationClip(b,void 0,u)})},k.prototype.loadNode=function(e){var t=this.json,a=this.extensions,i=this,s=t.meshReferences,o=t.meshUses,l=t.nodes[e];return(!0===l.isBone?Promise.resolve(new r.Bone):void 0!==l.mesh?i.getDependency("mesh",l.mesh).then(function(e){var t;if(s[l.mesh]>1){var n=o[l.mesh]++;(t=e.clone()).name+="_instance_"+n,t.onBeforeRender=e.onBeforeRender;for(var r=0,a=t.children.length;r<a;r++)t.children[r].name+="_instance_"+n,t.children[r].onBeforeRender=e.children[r].onBeforeRender}else t=e;return void 0!==l.weights&&t.traverse(function(e){if(e.isMesh)for(var t=0,n=l.weights.length;t<n;t++)e.morphTargetInfluences[t]=l.weights[t]}),t}):void 0!==l.camera?i.getDependency("camera",l.camera):l.extensions&&l.extensions[n.KHR_LIGHTS_PUNCTUAL]&&void 0!==l.extensions[n.KHR_LIGHTS_PUNCTUAL].light?i.getDependency("light",l.extensions[n.KHR_LIGHTS_PUNCTUAL].light):Promise.resolve(new r.Object3D)).then(function(e){if(void 0!==l.name&&(e.name=r.PropertyBinding.sanitizeNodeName(l.name)),I(e,l),l.extensions&&F(a,e,l),void 0!==l.matrix){var t=new r.Matrix4;t.fromArray(l.matrix),e.applyMatrix(t)}else void 0!==l.translation&&e.position.fromArray(l.translation),void 0!==l.rotation&&e.quaternion.fromArray(l.rotation),void 0!==l.scale&&e.scale.fromArray(l.scale);return e})},k.prototype.loadScene=function(){function e(t,n,a,i){var s=a.nodes[t];return i.getDependency("node",t).then(function(e){return void 0===s.skin?e:i.getDependency("skin",s.skin).then(function(e){for(var n=[],r=0,a=(t=e).joints.length;r<a;r++)n.push(i.getDependency("node",t.joints[r]));return Promise.all(n)}).then(function(n){for(var a=!0===e.isGroup?e.children:[e],i=0,s=a.length;i<s;i++){for(var o=a[i],l=[],u=[],c=0,p=n.length;c<p;c++){var f=n[c];if(f){l.push(f);var d=new r.Matrix4;void 0!==t.inverseBindMatrices&&d.fromArray(t.inverseBindMatrices.array,16*c),u.push(d)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[c])}o.bind(new r.Skeleton(l,u),o.matrixWorld)}return e});var t}).then(function(t){n.add(t);var r=[];if(s.children)for(var o=s.children,l=0,u=o.length;l<u;l++){var c=o[l];r.push(e(c,t,a,i))}return Promise.all(r)})}return function(t){var n=this.json,a=this.extensions,i=this.json.scenes[t],s=new r.Scene;void 0!==i.name&&(s.name=i.name),I(s,i),i.extensions&&F(a,s,i);for(var o=i.nodes||[],l=[],u=0,c=o.length;u<c;u++)l.push(e(o[u],s,n,this));return Promise.all(l).then(function(){return s})}}(),e}();e.exports=a},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(1),i=n.n(a),s=n(2),o=n.n(s),l=n(3),u=n.n(l),c=n(4),p=n.n(c);Object.assign(r.ShaderChunk,{common_mtoon:i.a,lights_mtoon_pars_fragment:o.a});const f=new Map([["VRM/UnlitTexture",{defines:{},uniforms:Object.assign({},r.ShaderLib.basic.uniforms,{f_Cutoff:{value:0},v_Color:{value:new r.Vector4(1,1,1,1)}}),vertexShader:r.ShaderLib.basic.vertexShader,fragmentShader:r.ShaderLib.basic.fragmentShader,lights:!1}],["VRM/UnlitCutout",{defines:{},uniforms:Object.assign({},r.ShaderLib.basic.uniforms,{f_Cutoff:{value:0},v_Color:{value:new r.Vector4(1,1,1,1)}}),vertexShader:r.ShaderLib.basic.vertexShader,fragmentShader:r.ShaderLib.basic.fragmentShader,lights:!1}],["VRM/UnlitTransparent",{defines:{},uniforms:Object.assign({},r.ShaderLib.basic.uniforms,{f_Cutoff:{value:0},v_Color:{value:new r.Vector4(1,1,1,1)}}),vertexShader:r.ShaderLib.basic.vertexShader,fragmentShader:r.ShaderLib.basic.fragmentShader,lights:!1}],["VRM/UnlitTransparentZWrite",{defines:{},uniforms:Object.assign({},r.ShaderLib.basic.uniforms,{f_Cutoff:{value:0},v_Color:{value:new r.Vector4(1,1,1,1)}}),vertexShader:r.ShaderLib.basic.vertexShader,fragmentShader:r.ShaderLib.basic.fragmentShader,lights:!1}],["VRM/MToon",{defines:{},uniforms:Object.assign({},r.ShaderLib.phong.uniforms,{f_Cutoff:{value:0},v_Color:{value:new r.Vector4(1,1,1,1)}}),vertexShader:p.a,fragmentShader:u.a,lights:!0}]]),d=new Map([["common",e=>{e.uniforms.f_Cutoff&&(e.defines.ALPHATEST=e.uniforms.f_Cutoff.value.toFixed(6));const t=e.uniforms.v_Color.value;e.uniforms.diffuse={value:new r.Color(t.x,t.y,t.z)},e.uniforms.opacity={value:t.w},e.uniforms.t_MainTex&&(e.map=e.uniforms.t_MainTex.value,e.uniforms.map=e.uniforms.t_MainTex)}],["VRM/UnlitTexture",e=>null],["VRM/UnlitCutout",e=>null],["VRM/UnlitTransparent",e=>{e.transparent=!0}],["VRM/UnlitTransparentZWrite",e=>{e.transparent=!0}],["VRM/MToon",e=>{switch(e.uniforms.t_SphereAdd||(e.uniforms.t_SphereAdd={value:new r.DataTexture(new Uint8Array(3),1,1,r.RGBFormat)}),e.uniforms.shininess={value:0},e.userData.RenderType){case"Opaque":e.defines.ALPHATEST=0;break;case"Cutout":break;case"Transparent":e.defines.ALPHATEST=0,e.transparent=!0;break;case"TransparentCutout":e.transparent=!0}if(e.uniforms.f_BumpScale&&(e.bumpScale=e.uniforms.f_BumpScale.value),e.uniforms.t_BumpMap&&(e.bumpMap=e.uniforms.t_BumpMap.value),e.uniforms.v_EmissionColor&&(e.emissive=e.uniforms.v_EmissionColor.value),e.uniforms.t_EmissionMap&&(e.emissiveMap=e.uniforms.t_EmissionMap.value),e.uniforms.f_CullMode)switch(e.uniforms.f_CullMode.value){case 0:e.side=r.DoubleSide;break;case 1:e.side=r.BackSide;break;case 2:e.side=r.FrontSide}}]]);class m extends r.ShaderMaterial{constructor(e){super(e),Object.assign(this.uniforms,{v_Color:{value:new r.Vector4(1,0,1,1)}}),this.vertexShader=r.ShaderLib.basic.vertexShader,this.fragmentShader=r.ShaderLib.basic.fragmentShader,d.get("common")(this)}fromMaterialProperty(e,t){if(this.name=e.name,!f.has(e.shader)||!d.has(e.shader))return;const n=f.get(e.shader),a={},i={};for(const t of Object.keys(e.floatProperties))i["f"+t]={value:e.floatProperties[t]};for(const t of Object.keys(e.vectorProperties)){const n=e.vectorProperties[t].concat();n.length=4,i["v"+t]={value:(new r.Vector4).fromArray(n)}}for(const n of Object.keys(e.textureProperties))void 0!==t[e.textureProperties[n]]&&(i["t"+n]={value:t[e.textureProperties[n]]});for(const t of Object.keys(e.keywordMap))a[t]=e.keywordMap[t];for(const t of Object.keys(e.tagMap))this.userData[t]={value:e.tagMap[t]};Object.assign(this.defines,n.defines),Object.assign(this.defines,a),Object.assign(this.uniforms,n.uniforms),Object.assign(this.uniforms,i),this.vertexShader=n.vertexShader,this.fragmentShader=n.fragmentShader,this.lights=n.lights,d.get("common")(this),d.get(e.shader)(this)}}var h=function(e,t,n,r){return new(n||(n=Promise))(function(a,i){function s(e){try{l(r.next(e))}catch(e){i(e)}}function o(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){e.done?a(e.value):new n(function(t){t(e.value)}).then(s,o)}l((r=r.apply(e,t||[])).next())})};class v{fromGLTF(e){return h(this,void 0,void 0,function*(){if(this.asset=e.asset,this.scene=e.scene,this.parser=e.parser,this.userData=e.userData,!e.userData.gltfExtensions||!e.userData.gltfExtensions.VRM)throw new Error("Loaded glTF is not a VRM model.");this.exporterVersion=e.userData.gltfExtensions.VRM.exporterVersion,this.meta=e.userData.gltfExtensions.VRM.meta,this.humanoid=e.userData.gltfExtensions.VRM.humanoid,this.blendShapeMaster=e.userData.gltfExtensions.VRM.blendShapeMaster,this.firstPerson=e.userData.gltfExtensions.VRM.firstPerson,this.secondaryAnimation=e.userData.gltfExtensions.VRM.secondaryAnimation,this.materialProperties=e.userData.gltfExtensions.VRM.materialProperties;{const e=new Set;this.materialProperties.forEach(t=>{Object.values(t.textureProperties).forEach(t=>{e.add(t)})});const t=new Array(this.parser.json.textures.length);for(const n of e.values())t[n]=this.parser.loadTexture(n);this.textures=yield Promise.all(t)}this.scene.traverse(e=>{if(e instanceof r.Mesh){const t=e.geometry instanceof r.BufferGeometry&&!!e.geometry.morphAttributes.position;if(Array.isArray(e.material))for(let n=0;n<e.material.length;++n){const r=this.materialProperties.find(t=>t.name===e.material[n].name),a=new m({morphTargets:t,skinning:!0});a.fromMaterialProperty(r,this.textures),e.material[n]=a}else{const n=this.materialProperties.find(t=>t.name===e.material.name),r=new m({morphTargets:t,skinning:!0});r.fromMaterialProperty(n,this.textures),e.material=r}}});{const e=new Array(this.parser.json.nodes.length);for(let t=0;t<this.parser.json.nodes.length;++t)e[t]=this.parser.loadNode(t);this.nodes=(yield Promise.all(e)).map(e=>this.scene.getObjectByName(e.name))}return this.meshes=this.parser.json.meshes.map(()=>[]),this.scene.traverse(e=>{if(e instanceof r.Mesh){const t=this.parser.json.nodes.find(t=>t.name===e.name);if(t&&void 0!==t.mesh)return void(this.meshes[t.mesh]=[e]);const n=e.name.lastIndexOf("_"),r=-1!==n?Number(e.name.substr(n+1)):0,a=-1===n||isNaN(r)?e.name:e.name.substr(0,n),i=this.parser.json.meshes.findIndex(e=>e.name===a);-1!==i&&(this.meshes[i][r]=e)}}),this})}getNode(e){return this.nodes[e]}setBlendShapeWeight(e,t,n){this.meshes[e].forEach(e=>{e&&e.morphTargetInfluences&&(e.morphTargetInfluences[t]=n)})}setBlendShapeGroupWeight(e,t){const n=this.blendShapeMaster.blendShapeGroups[e];n&&n.binds.forEach(e=>{this.setBlendShapeWeight(e.mesh,e.index,t*(e.weight/100))})}}const g=n(5);class _{constructor(e){this.manager=e||r.DefaultLoadingManager,this.gltfLoader=new g(this.manager)}load(e,t,n,r){this.gltfLoader.load(e,e=>{(new v).fromGLTF(e).then(e=>{t(e)})},n,r)}setCrossOrigin(e){return this.gltfLoader.setCrossOrigin(e),this}setPath(e){return this.gltfLoader.setPath(e),this}setDRACOLoader(e){return this.gltfLoader.setDRACOLoader(e),this}}n.d(t,"VRM",function(){return v}),n.d(t,"VRMLoader",function(){return _}),n.d(t,"VRMShaderMaterial",function(){return m})}]);Object.assign(THREE,__three_vrm__);
